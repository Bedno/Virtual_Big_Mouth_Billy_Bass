<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<meta name='keywords' content='Virtual Big Mouth Billy Bass'>
<meta name="description" content="Virtual Billy Bass">
<link rel='shortcut icon' href='https://bedno.com/g/vbb/vbmbb-icon.ico'>
<meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=1" />
<meta name="apple-mobile-web-app-capable" content="yes" />
<meta name="apple-mobile-web-app-status-bar-style" content="black-translucent" />
<meta property="og:title" content="VirtualBillyBass" />
<meta property="og:description" content="Virtual Billy Bass : Text-to-speech talking animated character." />
<meta property="og:image" content="https://bedno.com/g/vbb/virtualbillybass-620x325b.jpg" />
<meta property="og:type" content="website" />
<meta property="og:url" content="https://Bedno.com/vbb" />
<meta property="og:site_name" content="VirtualBillyBass" />
<meta http-equiv="cache-control" content="max-age=0" />
<meta http-equiv="cache-control" content="no-cache" />
<meta http-equiv="expires" content="0" />
<meta http-equiv="expires" content="Tue, 01 Jan 1980 1:00:00 GMT" />
<meta http-equiv="pragma" content="no-cache" />
<head>
<title>Virtual Billy Bass</title>
</head>
<script>

// Basic web-based text-to-speech talking animated character.  http://Bedno.com/vbb
// More info at https://github.com/bedno/Virtual_Big_Mouth_Billy_Bass

// Speech globals.
var SpeechTxt = "";  var TailNextIdx = 0;
var TimerMouth = null;  var TimerTail = null;  var SeqMouth = 0;  var SeqTail = 0;
var SpeechVoices = null;  var SpeechHandle = null;  var IsSpeaking = false;  var SpeechNext = "";
var VoiceLp = 0;  var VoiceIdx = -1;  var VoiceScore = -1;  var VoiceTmp = -1;
var ResizeTimer = null;

// Global utilities.

// Speech functions.
function UnqSec () {
  var Udt=new Date();
  return('?'+Udt.getYear().toString()+''+Udt.getMonth().toString()+''+Udt.getDate().toString()+''+Udt.getHours().toString()+''+Udt.getMinutes().toString()+''+Udt.getSeconds().toString()+'');
}

function UpdMouth() {
  if (SeqMouth == 2) {
    SeqMouth = 1;
    if (TimerMouth) { clearTimeout(TimerMouth); }
    TimerMouth = setTimeout('UpdMouth()',450);
  } else {
    SeqMouth = 0;
    MouthChar = '-';
  }
  document.getElementById('ImgMouth').src = "https://bedno.com/g/vbb/mouth-o-"+SeqMouth.toString()+".jpg";
}
function ActMouth() {
  SeqMouth = 2;
  document.getElementById('ImgMouth').src = "https://bedno.com/g/vbb/mouth-o-"+SeqMouth.toString()+".jpg";
  if (TimerMouth) { clearTimeout(TimerMouth); }
  TimerMouth = setTimeout('UpdMouth()',250);
}
function UpdTail() {
  SeqTail = 0;
  document.getElementById('ImgTail').src = "https://bedno.com/g/vbb/tail-o-"+SeqTail.toString()+".jpg";
}
function ActTail() {
  SeqTail = 1;
  document.getElementById('ImgTail').src = "https://bedno.com/g/vbb/tail-o-"+SeqTail.toString()+".jpg";
  if (TimerTail) { clearTimeout(TimerTail); }
  TimerTail = setTimeout('UpdTail()',400);
}
function SpeechLog(SLin) {
  if (location.href.toLowerCase().indexOf('dev')>-1) {
    document.getElementById('SpeechConsole').innerHTML = SLin+document.getElementById('SpeechConsole').innerHTML;
  }
}
function SpeechNextDo () {
  SpeechTxt = SpeechNext;
  SpeechNext = "";
  SpeechDo();
}

function SpeechDone(SpeechEvent) {
  IsSpeaking = false;
  SpeechLog('Finished in '+(Math.round((SpeechEvent.elapsedTime/100))/10).toString()+" seconds.<br>\n");
  if (SpeechNext.length > 1) { setTimeout('SpeechNextDo()',1000); }
}
function SpeechWord(SpeechEvent) {
  ActMouth();
  if (SpeechEvent.charIndex>TailNextIdx) { ActTail(); TailNextIdx += 12+Math.floor(Math.random()*18); }
  SpeechLog(SpeechEvent.name+':'+SpeechEvent.charIndex+"\n");
}
function SpeechDo () {
  TailNextIdx = SpeechTxt.length/2;  if (TailNextIdx>22) { TailNextIdx = 12+Math.floor(Math.random()*18); }
  if ('speechSynthesis' in window) {  // If browser is speech capable
    if (IsSpeaking) {
      window.speechSynthesis.cancel();  // Cancel any existing speaking
      IsSpeaking = false;
    } else {
      IsSpeaking = true;
      SpeechHandle.text = SpeechTxt;
      // Connect the completion callback.
      SpeechHandle.onend = SpeechDone;
      // Connect the word boundary callback.
      SpeechHandle.onboundary = SpeechWord;
      // Speak the passed phrase.
      window.speechSynthesis.speak(SpeechHandle);
    }
  } else {
    SpeechLog("This device does not support text to speech.<br>\n");
  }
}

function SpeechVoicesLoad () {
  var VoiceName = "";
  if ('speechSynthesis' in window) {
    if ( (SpeechVoices==null) || (SpeechVoices.length<1) ) {
      SpeechVoices = window.speechSynthesis.getVoices();
      setTimeout('SpeechVoicesLoad()',1000);  // auto-retry
    } else {
      VoiceIdx = -1;  VoiceScore = -1;
      for (VoiceLp = 0; VoiceLp<SpeechVoices.length; VoiceLp++) {
        VoiceTmp = -1;
        VoiceName = " "+SpeechVoices[VoiceLp].name.toLowerCase().replace(/[^a-zA-Z0-9]/,' ')+" ";
        if (SpeechVoices[VoiceLp].lang.toLowerCase().indexOf('en-')>=0) { VoiceTmp += 20000; }
        if (VoiceName.indexOf(' english male ')>=0) { VoiceTmp += 5000; }
        if (VoiceName.indexOf(' david ')>=0) { VoiceTmp += 4000; }
        if (VoiceName.indexOf(' daniel ')>=0) { VoiceTmp += 4000; }
        if (VoiceName.indexOf(' male ')>=0) { VoiceTmp += 1000; }
        if (VoiceName.indexOf(' google us ')>=0) { VoiceTmp += 500; }
        if (SpeechVoices[VoiceLp].lang.toLowerCase().indexOf('-us')>=0) { VoiceTmp += 100; }
        if (SpeechVoices[VoiceLp].lang.indexOf('-gb')>=0) { VoiceTmp += 70; }
        if (SpeechVoices[VoiceLp].lang.indexOf('-au')>=0) { VoiceTmp += 50; }
        if (SpeechVoices[VoiceLp].default) { VoiceTmp += 50; }
        if (VoiceTmp > VoiceScore) {
          VoiceIdx = VoiceLp;  VoiceScore = VoiceTmp;
        }
      }
      if (VoiceIdx >= 0) {
        SpeechHandle.voice = SpeechVoices[VoiceIdx];
        SpeechLog('Voice loaded: '+SpeechVoices[VoiceIdx].name+' ('+SpeechVoices[VoiceIdx].lang+')'+"<br>\n");
      }
    }
  }
}

function SpeechSetup () {
  if ('speechSynthesis' in window) {  // If browser is speech capable
    SpeechHandle = new SpeechSynthesisUtterance();  // Initialize a speech handle
    // Select voice and other settings.
    SpeechHandle.voiceURI = 'native';
    SpeechHandle.volume = 1.0; // 0 to 1
    SpeechHandle.rate = 1.0; // 0.1 to 10
    SpeechHandle.pitch = 1.0; // 0 to 2
    // SpeechHandle.lang = 'en-US';
  } else {
    document.getElementById('SpeechControls').innerHTML = "<br><br><font color='red' size=3>SORRY, this browser can't speak.</font><br><br>";
  }
}

function SpeakFortune () {
  var Fortunes = new Array('It is certain', 'It is decidedly so', 'Without a doubt', 'Yes definitely', 'You may rely on it', 'As I see it, yes', 'Most likely', 'Outlook good', 'Yes', 'Signs point to yes', 'Reply hazy try again', 'Ask again later', 'Better not tell you now', 'Cannot predict now', 'Concentrate and ask again', 'Do not count on it', 'My reply is no', 'My sources say no', 'Outlook not so good', 'Very doubtful');
  var FortuneIdx = Math.floor(Math.random()*Fortunes.length);
  var Preambles = new Array('The universe suggests your answer is', 'The virtual magic eight ball says', 'The digital tea leaves tell me');
  var PreambleIdx = Math.floor(Math.random()*Preambles.length);
  SpeechTxt = Preambles[PreambleIdx]+"...\n\n"+Fortunes[FortuneIdx];
  SpeechDo();
}

function SpeakSong () {
  var Songs = new Array(
     "I wanna know, can you tell me?\nI'd love to stay,\nTake me to the river, drop me in the water\nTake me to the river, drop me in the water.",
     "Here's a little song I wrote,\nyou might want to sing it note for note,\ndon't worry, be happy,\ndon't worry be happy,\nwoooooohooooo don't worry,\nwoooooohooooo be happy,\nwoooooo hooooo don't worry be happy.",
     "First I was afraid, I was petrified,\nThinking I could never live without you by my side,\nbut then I spent so many nights, thinking how you did me wrong...");
  var SongIdx = Math.floor(Math.random()*Songs.length);
  SpeechTxt = Songs[SongIdx];
  SpeechDo();
}

function SpeakFlirt () {
  var Flirts = new Array( "Heeheehee, that tickles.\n",  "OK, OK, I'm awake, I'm awake.", "Forgive my forwardness, but are you seeing anyone?", "Yes, that feels good, don't stop." );
  var FlirtIdx = Math.floor(Math.random()*Flirts.length);
  SpeechTxt = Flirts[FlirtIdx];
  SpeechDo();
}

function SpeakText () {
  if (document.getElementById('SpeechText')) {
    SpeechTxt = document.getElementById('SpeechText').value;
    SpeechDo();
  }
}

function ResizeCels () {
  var WinWidPhys = window.innerWidth && document.documentElement.clientWidth ? Math.min(window.innerWidth, document.documentElement.clientWidth) : window.innerWidth || document.documentElement.clientWidth || document.getElementsByTagName('body')[0].clientWidth;
  var WinHgtPhys = window.innerHeight && document.documentElement.clientHeight ? Math.min(window.innerHeight, document.documentElement.clientHeight) : window.innerHeight || document.documentElement.clientHeight || document.getElementsByTagName('body')[0].clientHeight;
  WinWidPhys = Math.floor(WinWidPhys*0.9);
  WinHgtPhys = Math.floor(WinHgtPhys*0.9)-32;
  var ImgSize = Math.floor(Math.min(WinWidPhys,WinHgtPhys)/2);
  SpeechLog('Image sized '+ImgSize.toString());
  if ( (ImgSize>64) && (ImgSize<1200) ) {
    document.getElementById('ImgMouth').style.width = ImgSize.toString()+'px';
    document.getElementById('ImgMouth').style.height = ImgSize.toString()+'px';
    document.getElementById('ImgTail').style.width = ImgSize.toString()+'px';
    document.getElementById('ImgTail').style.height = ImgSize.toString()+'px';
  } else {
    document.getElementById('ImgMouth').style.width = '144px';
    document.getElementById('ImgMouth').style.height = '144px';
    document.getElementById('ImgTail').style.width = '144px';
    document.getElementById('ImgTail').style.height = '144px';
  }
  window.onresize = function(event) {
    if (ResizeTimer) { clearTimeout(ResizeTimer); }
    ResizeTimer = setTimeout('ResizeCels()',1200);
  }
}

// MAIN
function DoStartup () {
  SpeechSetup();
  // SpeechVoicesLoad();  // Word boundary syncing apparently only works on default voice?!?
  ResizeCels();
}

function ShowHelp () {
  var HelpText = "";
  if (document.getElementById('SpeechHelpDiv').style.visibility=='visible') {
    document.getElementById('SpeechHelpDiv').innerHTML = "";
    document.getElementById('SpeechHelpDiv').style.visibility='hidden';
  } else {
    HelpText += "<font size=2><font size=3><a href='https://Bedno.com/vbb'>Bedno.com/vbb</a></font><br>\n";
    HelpText += "(Virtual Big Mouth Billy Bass) is a web-based animated character\n";
    HelpText += "modeled after an iconic <a href='https://en.wikipedia.org/wiki/Big_Mouth_Billy_Bass' target='wiki'>toy of the late 1990s</a>.\n";
    HelpText += "This incarnation speaks banter, eight-ball style fortunes, user text, and excerpts of the original's songs.<br>\n";
    HelpText += "Created in January 2018 by <a href='http://AndrewBedno.com' target='ab'>Andrew Bedno</a> for fun and to experiment with advanced browser capabilities.\n";
    HelpText += "Source code <a href='https://github.com/bedno/Virtual_Big_Mouth_Billy_Bass' target='github'>shared on GitHub</a>.</font><br>\n";
    HelpText += "<input type='button' onClick='SpeakText();' value='Speak your text:'><br>\n";
    HelpText += "<textarea rows='3' cols='32' name='SpeechText' id='SpeechText' style='font-size:8pt';>What would you like me to say?</textarea><br>\n";
    document.getElementById('SpeechHelpDiv').innerHTML = HelpText;
    document.getElementById('SpeechHelpDiv').style.visibility='visible';
  }
}

</script>
<body onLoad="DoStartup();"><font face="Arial" size=2>

<div id="SpeechControls" style="z-index:999; align:center; font-size:10pt;"><button onClick="SpeakFortune();" style="color:#000000; background-color:orange; font-family:Helvetica, Arial; text-decoration:bold; font-size:12pt;">Fortune</button>&nbsp;<button onClick="SpeakSong();" style="color:#000000; background-color:orange; font-family:Helvetica, Arial; text-decoration:bold; font-size:12pt;">Song</button>&nbsp;<button onClick="ShowHelp();" style="color:#000000; background-color:orange; font-family:Helvetica, Arial; text-decoration:bold; font-size:12pt;">?</button>
<div id="SpeechHelpDiv" style="visibility:hidden; position:relative; display:inline-block; z-index:0;"></div>
</div>

<div id="SpeechCharacter" style="z-index:1; position:relative; left:0px; top:0px;">
<span onClick="SpeakFlirt();"><nobr><img id="ImgMouth" src="https://bedno.com/g/vbb/mouth-o-0.jpg" border=0 width="144" height="144" border=0><img id="ImgTail" src="https://bedno.com/g/vbb/tail-o-0.jpg" border=0 width="144" height="144" border=0></nobr></a></span></div>

<div id="SpeechConsole" style="overflow:hidden; font-size:7pt; color:gray;"><br><br></div><br><br>

</font></body>
</html>

